/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -l DeviceInstance -a DeviceInstance_dbusif org.lirid.receiver.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DEVICEINSTANCE_DBUSIF_H
#define DEVICEINSTANCE_DBUSIF_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
class DeviceInstance;

/*
 * Adaptor class for interface org.liri.Device
 */
class DeviceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.liri.Device")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.liri.Device\">\n"
"    <method name=\"ReceiverState\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"state\"/>\n"
"    </method>\n"
"    <method name=\"getSettings\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"keys\"/>\n"
"      <arg direction=\"out\" type=\"as\" name=\"values\"/>\n"
"    </method>\n"
"    <method name=\"getAllSettings\">\n"
"      <arg direction=\"out\" type=\"a{ss}\" name=\"settings\"/>\n"
"      <annotation value=\"QMap&lt;QString,QString>\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"setSettings\">\n"
"      <arg direction=\"in\" type=\"a{ss}\" name=\"settings\"/>\n"
"      <annotation value=\"QMap&lt;QString,QString>\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <signal name=\"receiverStateChanged\">\n"
"      <arg type=\"i\" name=\"state\"/>\n"
"    </signal>\n"
"    <signal name=\"key\">\n"
"      <arg type=\"s\" name=\"keycode\"/>\n"
"      <arg type=\"s\" name=\"keyname\"/>\n"
"      <arg type=\"u\" name=\"channel\"/>\n"
"      <arg type=\"i\" name=\"pressed\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    DeviceAdaptor(DeviceInstance *parent);
    virtual ~DeviceAdaptor();

    inline DeviceInstance *parent() const;

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int ReceiverState();
    QMap<QString,QString> getAllSettings();
    QStringList getSettings(const QStringList &keys);
    void setSettings(const QMap<QString,QString> &settings);
Q_SIGNALS: // SIGNALS
    void key(const QString &keycode, const QString &keyname, uint channel, int pressed);
    void receiverStateChanged(int state);
};

#endif
