   1               		.file	"par36.c"
   2               	__SP_L__ = 0x3d
   3               	__SREG__ = 0x3f
   4               	__tmp_reg__ = 0
   5               	__zero_reg__ = 1
   6               		.text
   7               	.global	par36_init
   9               	par36_init:
  10 0000 CF93      		push r28
  11 0002 DF93      		push r29
  12 0004 CDB7      		in r28,__SP_L__
  13 0006 DD27      		clr r29
  14 0008 C550      		subi r28,lo8(-(-5))
  15 000a CDBF      		out __SP_L__,r28
  16               	/* prologue: function */
  17               	/* frame size = 5 */
  18               	/* stack size = 7 */
  19               	.L__stack_usage = 7
  20 000c 45E0      		ldi r20,lo8(5)
  21 000e 50E0      		ldi r21,0
  22 0010 60E0      		ldi r22,lo8(eepromdata)
  23 0012 70E0      		ldi r23,hi8(eepromdata)
  24 0014 CE01      		movw r24,r28
  25 0016 0196      		adiw r24,1
  26 0018 00D0      		rcall __eerd_block_tn2313
  27 001a 8981      		ldd r24,Y+1
  28 001c 8934      		cpi r24,lo8(73)
  29 001e 01F4      		brne .L2
  30 0020 8A81      		ldd r24,Y+2
  31 0022 8E34      		cpi r24,lo8(78)
  32 0024 01F4      		brne .L2
  33 0026 8B81      		ldd r24,Y+3
  34 0028 8934      		cpi r24,lo8(73)
  35 002a 01F4      		brne .L2
  36 002c 8C81      		ldd r24,Y+4
  37 002e 8435      		cpi r24,lo8(84)
  38 0030 01F4      		brne .L2
  39 0032 8D81      		ldd r24,Y+5
  40 0034 8093 0000 		sts address,r24
  41               	.L2:
  42 0038 8091 0000 		lds r24,address
  43 003c 8111      		cpse r24,__zero_reg__
  44 003e 00C0      		rjmp .L1
  45 0040 82E0      		ldi r24,lo8(2)
  46 0042 8093 0000 		sts address,r24
  47               	.L1:
  48               	/* epilogue start */
  49 0046 CB5F      		subi r28,lo8(-(5))
  50 0048 CDBF      		out __SP_L__,r28
  51 004a DF91      		pop r29
  52 004c CF91      		pop r28
  53 004e 0895      		ret
  55               	.global	getAddress
  57               	getAddress:
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62 0050 8091 0000 		lds r24,address
  63 0054 0895      		ret
  65               	.global	setAddress
  67               	setAddress:
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  72 0056 8093 0000 		sts address,r24
  73 005a 682F      		mov r22,r24
  74 005c 80E0      		ldi r24,lo8(eepromdata+4)
  75 005e 90E0      		ldi r25,hi8(eepromdata+4)
  76 0060 00C0      		rjmp __eewr_byte_tn2313
  78               	.global	eepromdata
  79               		.section	.eeprom,"aw",@progbits
  82               	eepromdata:
  83 0000 49        		.byte	73
  84 0001 4E        		.byte	78
  85 0002 49        		.byte	73
  86 0003 54        		.byte	84
  87 0004 02        		.byte	2
  88               	.global	address
  89               		.section .bss
  92               	address:
  93 0000 00        		.zero	1
  94               		.ident	"GCC: (GNU) 4.7.0"
  95               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 par36.c
     /tmp/ccilRMR8.s:2      *ABS*:000000000000003d __SP_L__
     /tmp/ccilRMR8.s:3      *ABS*:000000000000003f __SREG__
     /tmp/ccilRMR8.s:4      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccilRMR8.s:5      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccilRMR8.s:9      .text:0000000000000000 par36_init
     /tmp/ccilRMR8.s:82     .eeprom:0000000000000000 eepromdata
     /tmp/ccilRMR8.s:92     .bss:0000000000000000 address
     /tmp/ccilRMR8.s:57     .text:0000000000000050 getAddress
     /tmp/ccilRMR8.s:67     .text:0000000000000056 setAddress

UNDEFINED SYMBOLS
__eerd_block_tn2313
__eewr_byte_tn2313
__do_clear_bss
